<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jimmie's blog</title><link href="http://zpjjimmie.github.io/" rel="alternate"></link><link href="http://zpjjimmie.github.io/feeds/all.atom.xml" rel="self"></link><id>http://zpjjimmie.github.io/</id><updated>2017-07-19T00:00:00+08:00</updated><entry><title>当引用指向临时对象</title><link href="http://zpjjimmie.github.io/dang-yin-yong-zhi-xiang-lin-shi-dui-xiang.html" rel="alternate"></link><updated>2017-07-19T00:00:00+08:00</updated><author><name>Jimmie</name></author><id>tag:zpjjimmie.github.io,2017-07-19:dang-yin-yong-zhi-xiang-lin-shi-dui-xiang.html</id><summary type="html">&lt;p&gt;延长临时对象的生命周期&lt;/p&gt;</summary></entry><entry><title>状态同步与帧同步</title><link href="http://zpjjimmie.github.io/lockstep.html" rel="alternate"></link><updated>2017-07-19T00:00:00+08:00</updated><author><name>Jimmie</name></author><id>tag:zpjjimmie.github.io,2017-07-19:lockstep.html</id><summary type="html">&lt;p&gt;游戏同步中，大致使用的一般都是状态同步和帧同步两种，以这两种为分支不断优化变种，以适应特定的游戏。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;状态同步
   各种逻辑（比如技能释放命中、伤害等）先在服务器计算，然后将运算结果发送给客户端，客户端同步服务器发送来的状态变化。
   这样的同步方式，会随着单位的增加，流量会急剧增加。可以控制数据，如只发送九屏消息，来控制流量，有时候客户端也会做一些运算
   来减轻服务器压力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帧同步
   帧同步是MOBA类和实时战斗类游戏采用的同步方式，帧同步可以使得客户端表现流畅。服务器不再同步状态，而是对于每一帧（turn），
   客户端将自己的操作发给服务器，服务器在一帧结束后，将所收到的操作广播给各个客户端，客户端根据相应操作指令，分别模
   拟执行逻辑操作，使用相同的随机种子，执行出完全相同的结果。
   由于网络延迟，服务器可能在这一帧迟迟未收到客户端发送的消息，而其它客户端消息已经到达，服务器会等待最慢的那个客户端消息，
   如果超过能容忍的上限时间，可能直接丢弃数据，或者客户端在得知消息未发送成功的时候，缓存这一次的操作，并和下一次操作一起发送。
   服务器也可能未成功同步某个客户端的数据给其它客户端，这样服务器要缓存指令，在下一次网络好的时候，一起同步，这样就不会导致不同步。
   帧同步无法使用浮点数来处理逻辑，由于浮点数的误差性，每台机器可能算出来的结果有差异，这样会导致不同步，引起蝴蝶效应。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary></entry><entry><title>My Blog</title><link href="http://zpjjimmie.github.io/my-blog.html" rel="alternate"></link><updated>2017-07-19T00:00:00+08:00</updated><author><name>Jimmie</name></author><id>tag:zpjjimmie.github.io,2017-07-19:my-blog.html</id><summary type="html">&lt;p&gt;偶然间听闻同学说可以在github上写博客，听起来比较有意思,
于是尝试一番，果然靠谱。虽然工作多年，但是一直没有写文章
的习惯，将一些所学所想记录此处，既能分享经验，又能方便以
后回顾，想来也别有一番乐趣。忙碌的工作之余，随便写点什么，
也是不错的。&lt;/p&gt;
&lt;p&gt;还没弄主题，所以有点简陋，以后慢慢弄。&lt;/p&gt;
&lt;p&gt;附个安装链接: &lt;a href="http://kwdfmzhu.github.io/2016/04/13/pelican_blog/"&gt;github blog使用指南&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pelican: &lt;a href="http://docs.getpelican.com/en/stable/quickstart.html"&gt;pelican文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Markdown: &lt;a href="www.appinn.com/markdown/#link"&gt;markdown中文文档&lt;/a&gt;&lt;/p&gt;</summary></entry></feed>